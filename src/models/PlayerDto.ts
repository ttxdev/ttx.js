/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayerType } from './PlayerType';
import {
    PlayerTypeFromJSON,
    PlayerTypeFromJSONTyped,
    PlayerTypeToJSON,
    PlayerTypeToJSONTyped,
} from './PlayerType';
import type { PortfolioSnapshotDto } from './PortfolioSnapshotDto';
import {
    PortfolioSnapshotDtoFromJSON,
    PortfolioSnapshotDtoFromJSONTyped,
    PortfolioSnapshotDtoToJSON,
    PortfolioSnapshotDtoToJSONTyped,
} from './PortfolioSnapshotDto';
import type { PlayerShareDto } from './PlayerShareDto';
import {
    PlayerShareDtoFromJSON,
    PlayerShareDtoFromJSONTyped,
    PlayerShareDtoToJSON,
    PlayerShareDtoToJSONTyped,
} from './PlayerShareDto';
import type { PlayerTransactionDto } from './PlayerTransactionDto';
import {
    PlayerTransactionDtoFromJSON,
    PlayerTransactionDtoFromJSONTyped,
    PlayerTransactionDtoToJSON,
    PlayerTransactionDtoToJSONTyped,
} from './PlayerTransactionDto';
import type { LootBoxDto } from './LootBoxDto';
import {
    LootBoxDtoFromJSON,
    LootBoxDtoFromJSONTyped,
    LootBoxDtoToJSON,
    LootBoxDtoToJSONTyped,
} from './LootBoxDto';

/**
 * 
 * @export
 * @interface PlayerDto
 */
export interface PlayerDto {
    /**
     * 
     * @type {number}
     * @memberof PlayerDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof PlayerDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlayerDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PlayerDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerDto
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerDto
     */
    twitchId: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerDto
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerDto
     */
    avatarUrl: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerDto
     */
    credits: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerDto
     */
    portfolio: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerDto
     */
    value: number;
    /**
     * 
     * @type {PlayerType}
     * @memberof PlayerDto
     */
    type: PlayerType;
    /**
     * 
     * @type {Array<PlayerTransactionDto>}
     * @memberof PlayerDto
     */
    transactions: Array<PlayerTransactionDto>;
    /**
     * 
     * @type {Array<LootBoxDto>}
     * @memberof PlayerDto
     */
    lootBoxes: Array<LootBoxDto>;
    /**
     * 
     * @type {Array<PlayerShareDto>}
     * @memberof PlayerDto
     */
    shares: Array<PlayerShareDto>;
    /**
     * 
     * @type {Array<PortfolioSnapshotDto>}
     * @memberof PlayerDto
     */
    history: Array<PortfolioSnapshotDto>;
}



/**
 * Check if a given object implements the PlayerDto interface.
 */
export function instanceOfPlayerDto(value: object): value is PlayerDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('twitchId' in value) || value['twitchId'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    if (!('credits' in value) || value['credits'] === undefined) return false;
    if (!('portfolio' in value) || value['portfolio'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    if (!('lootBoxes' in value) || value['lootBoxes'] === undefined) return false;
    if (!('shares' in value) || value['shares'] === undefined) return false;
    if (!('history' in value) || value['history'] === undefined) return false;
    return true;
}

export function PlayerDtoFromJSON(json: any): PlayerDto {
    return PlayerDtoFromJSONTyped(json, false);
}

export function PlayerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'slug': json['slug'],
        'twitchId': json['twitch_id'],
        'url': json['url'],
        'avatarUrl': json['avatar_url'],
        'credits': json['credits'],
        'portfolio': json['portfolio'],
        'value': json['value'],
        'type': PlayerTypeFromJSON(json['type']),
        'transactions': ((json['transactions'] as Array<any>).map(PlayerTransactionDtoFromJSON)),
        'lootBoxes': ((json['loot_boxes'] as Array<any>).map(LootBoxDtoFromJSON)),
        'shares': ((json['shares'] as Array<any>).map(PlayerShareDtoFromJSON)),
        'history': ((json['history'] as Array<any>).map(PortfolioSnapshotDtoFromJSON)),
    };
}

export function PlayerDtoToJSON(json: any): PlayerDto {
    return PlayerDtoToJSONTyped(json, false);
}

export function PlayerDtoToJSONTyped(value?: Omit<PlayerDto, 'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'slug': value['slug'],
        'twitch_id': value['twitchId'],
        'avatar_url': value['avatarUrl'],
        'credits': value['credits'],
        'portfolio': value['portfolio'],
        'value': value['value'],
        'type': PlayerTypeToJSON(value['type']),
        'transactions': ((value['transactions'] as Array<any>).map(PlayerTransactionDtoToJSON)),
        'loot_boxes': ((value['lootBoxes'] as Array<any>).map(LootBoxDtoToJSON)),
        'shares': ((value['shares'] as Array<any>).map(PlayerShareDtoToJSON)),
        'history': ((value['history'] as Array<any>).map(PortfolioSnapshotDtoToJSON)),
    };
}

