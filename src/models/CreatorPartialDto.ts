/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StreamStatusDto } from './StreamStatusDto';
import {
    StreamStatusDtoFromJSON,
    StreamStatusDtoFromJSONTyped,
    StreamStatusDtoToJSON,
    StreamStatusDtoToJSONTyped,
} from './StreamStatusDto';
import type { VoteDto } from './VoteDto';
import {
    VoteDtoFromJSON,
    VoteDtoFromJSONTyped,
    VoteDtoToJSON,
    VoteDtoToJSONTyped,
} from './VoteDto';

/**
 * 
 * @export
 * @interface CreatorPartialDto
 */
export interface CreatorPartialDto {
    /**
     * 
     * @type {number}
     * @memberof CreatorPartialDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof CreatorPartialDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreatorPartialDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    twitchId: string;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    avatarUrl: string;
    /**
     * 
     * @type {string}
     * @memberof CreatorPartialDto
     */
    ticker: string;
    /**
     * 
     * @type {number}
     * @memberof CreatorPartialDto
     */
    value: number;
    /**
     * 
     * @type {StreamStatusDto}
     * @memberof CreatorPartialDto
     */
    streamStatus: StreamStatusDto;
    /**
     * 
     * @type {Array<VoteDto>}
     * @memberof CreatorPartialDto
     */
    history: Array<VoteDto>;
}

/**
 * Check if a given object implements the CreatorPartialDto interface.
 */
export function instanceOfCreatorPartialDto(value: object): value is CreatorPartialDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('twitchId' in value) || value['twitchId'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    if (!('ticker' in value) || value['ticker'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('streamStatus' in value) || value['streamStatus'] === undefined) return false;
    if (!('history' in value) || value['history'] === undefined) return false;
    return true;
}

export function CreatorPartialDtoFromJSON(json: any): CreatorPartialDto {
    return CreatorPartialDtoFromJSONTyped(json, false);
}

export function CreatorPartialDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatorPartialDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'slug': json['slug'],
        'twitchId': json['twitch_id'],
        'url': json['url'],
        'avatarUrl': json['avatar_url'],
        'ticker': json['ticker'],
        'value': json['value'],
        'streamStatus': StreamStatusDtoFromJSON(json['stream_status']),
        'history': ((json['history'] as Array<any>).map(VoteDtoFromJSON)),
    };
}

export function CreatorPartialDtoToJSON(json: any): CreatorPartialDto {
    return CreatorPartialDtoToJSONTyped(json, false);
}

export function CreatorPartialDtoToJSONTyped(value?: Omit<CreatorPartialDto, 'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'slug': value['slug'],
        'twitch_id': value['twitchId'],
        'avatar_url': value['avatarUrl'],
        'ticker': value['ticker'],
        'value': value['value'],
        'stream_status': StreamStatusDtoToJSON(value['streamStatus']),
        'history': ((value['history'] as Array<any>).map(VoteDtoToJSON)),
    };
}

