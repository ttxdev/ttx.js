/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayerPartialDto } from './PlayerPartialDto';
import {
    PlayerPartialDtoFromJSON,
    PlayerPartialDtoFromJSONTyped,
    PlayerPartialDtoToJSON,
    PlayerPartialDtoToJSONTyped,
} from './PlayerPartialDto';
import type { CreatorPartialDto } from './CreatorPartialDto';
import {
    CreatorPartialDtoFromJSON,
    CreatorPartialDtoFromJSONTyped,
    CreatorPartialDtoToJSON,
    CreatorPartialDtoToJSONTyped,
} from './CreatorPartialDto';

/**
 * 
 * @export
 * @interface LootBoxDto
 */
export interface LootBoxDto {
    /**
     * 
     * @type {number}
     * @memberof LootBoxDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof LootBoxDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof LootBoxDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof LootBoxDto
     */
    isOpen: boolean;
    /**
     * 
     * @type {CreatorPartialDto}
     * @memberof LootBoxDto
     */
    result: CreatorPartialDto;
    /**
     * 
     * @type {PlayerPartialDto}
     * @memberof LootBoxDto
     */
    player: PlayerPartialDto;
}

/**
 * Check if a given object implements the LootBoxDto interface.
 */
export function instanceOfLootBoxDto(value: object): value is LootBoxDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('isOpen' in value) || value['isOpen'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    if (!('player' in value) || value['player'] === undefined) return false;
    return true;
}

export function LootBoxDtoFromJSON(json: any): LootBoxDto {
    return LootBoxDtoFromJSONTyped(json, false);
}

export function LootBoxDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LootBoxDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'isOpen': json['is_open'],
        'result': CreatorPartialDtoFromJSON(json['result']),
        'player': PlayerPartialDtoFromJSON(json['player']),
    };
}

export function LootBoxDtoToJSON(json: any): LootBoxDto {
    return LootBoxDtoToJSONTyped(json, false);
}

export function LootBoxDtoToJSONTyped(value?: LootBoxDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'is_open': value['isOpen'],
        'result': CreatorPartialDtoToJSON(value['result']),
        'player': PlayerPartialDtoToJSON(value['player']),
    };
}

