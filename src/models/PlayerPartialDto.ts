/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayerType } from './PlayerType';
import {
    PlayerTypeFromJSON,
    PlayerTypeFromJSONTyped,
    PlayerTypeToJSON,
    PlayerTypeToJSONTyped,
} from './PlayerType';

/**
 * 
 * @export
 * @interface PlayerPartialDto
 */
export interface PlayerPartialDto {
    /**
     * 
     * @type {number}
     * @memberof PlayerPartialDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof PlayerPartialDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlayerPartialDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PlayerPartialDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerPartialDto
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerPartialDto
     */
    twitchId: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerPartialDto
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerPartialDto
     */
    avatarUrl: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerPartialDto
     */
    credits: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerPartialDto
     */
    portfolio: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerPartialDto
     */
    value: number;
    /**
     * 
     * @type {PlayerType}
     * @memberof PlayerPartialDto
     */
    type: PlayerType;
}



/**
 * Check if a given object implements the PlayerPartialDto interface.
 */
export function instanceOfPlayerPartialDto(value: object): value is PlayerPartialDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('twitchId' in value) || value['twitchId'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    if (!('credits' in value) || value['credits'] === undefined) return false;
    if (!('portfolio' in value) || value['portfolio'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function PlayerPartialDtoFromJSON(json: any): PlayerPartialDto {
    return PlayerPartialDtoFromJSONTyped(json, false);
}

export function PlayerPartialDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerPartialDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'slug': json['slug'],
        'twitchId': json['twitch_id'],
        'url': json['url'],
        'avatarUrl': json['avatar_url'],
        'credits': json['credits'],
        'portfolio': json['portfolio'],
        'value': json['value'],
        'type': PlayerTypeFromJSON(json['type']),
    };
}

export function PlayerPartialDtoToJSON(json: any): PlayerPartialDto {
    return PlayerPartialDtoToJSONTyped(json, false);
}

export function PlayerPartialDtoToJSONTyped(value?: Omit<PlayerPartialDto, 'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'slug': value['slug'],
        'twitch_id': value['twitchId'],
        'avatar_url': value['avatarUrl'],
        'credits': value['credits'],
        'portfolio': value['portfolio'],
        'value': value['value'],
        'type': PlayerTypeToJSON(value['type']),
    };
}

