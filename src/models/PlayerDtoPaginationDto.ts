/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayerDto } from './PlayerDto';
import {
    PlayerDtoFromJSON,
    PlayerDtoFromJSONTyped,
    PlayerDtoToJSON,
    PlayerDtoToJSONTyped,
} from './PlayerDto';

/**
 * 
 * @export
 * @interface PlayerDtoPaginationDto
 */
export interface PlayerDtoPaginationDto {
    /**
     * 
     * @type {Array<PlayerDto>}
     * @memberof PlayerDtoPaginationDto
     */
    data: Array<PlayerDto>;
    /**
     * 
     * @type {number}
     * @memberof PlayerDtoPaginationDto
     */
    total: number;
}

/**
 * Check if a given object implements the PlayerDtoPaginationDto interface.
 */
export function instanceOfPlayerDtoPaginationDto(value: object): value is PlayerDtoPaginationDto {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function PlayerDtoPaginationDtoFromJSON(json: any): PlayerDtoPaginationDto {
    return PlayerDtoPaginationDtoFromJSONTyped(json, false);
}

export function PlayerDtoPaginationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerDtoPaginationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(PlayerDtoFromJSON)),
        'total': json['total'],
    };
}

export function PlayerDtoPaginationDtoToJSON(json: any): PlayerDtoPaginationDto {
    return PlayerDtoPaginationDtoToJSONTyped(json, false);
}

export function PlayerDtoPaginationDtoToJSONTyped(value?: PlayerDtoPaginationDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(PlayerDtoToJSON)),
        'total': value['total'],
    };
}

