/* tslint:disable */
/* eslint-disable */
/**
 * TTX.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TwitchUserDto
 */
export interface TwitchUserDto {
    /**
     * 
     * @type {string}
     * @memberof TwitchUserDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TwitchUserDto
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof TwitchUserDto
     */
    login: string;
    /**
     * 
     * @type {string}
     * @memberof TwitchUserDto
     */
    avatarUrl: string;
}

/**
 * Check if a given object implements the TwitchUserDto interface.
 */
export function instanceOfTwitchUserDto(value: object): value is TwitchUserDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('login' in value) || value['login'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    return true;
}

export function TwitchUserDtoFromJSON(json: any): TwitchUserDto {
    return TwitchUserDtoFromJSONTyped(json, false);
}

export function TwitchUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TwitchUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'displayName': json['display_name'],
        'login': json['login'],
        'avatarUrl': json['avatar_url'],
    };
}

export function TwitchUserDtoToJSON(json: any): TwitchUserDto {
    return TwitchUserDtoToJSONTyped(json, false);
}

export function TwitchUserDtoToJSONTyped(value?: TwitchUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'display_name': value['displayName'],
        'login': value['login'],
        'avatar_url': value['avatarUrl'],
    };
}

